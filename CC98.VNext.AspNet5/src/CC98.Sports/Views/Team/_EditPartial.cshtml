@using System.Security.Claims
@using CC98
@model Team
@inject AppSettingService<SystemSetting> SettingService
@inject SportDataModel DbContext

@{
	// 部门列表
	var departmentList = SettingService.Current.DepartmentList.SplitWithNewLine();
	var locationList = SettingService.Current.LocationList.SplitWithNewLine();

	var isEdit = (bool)ViewBag.IsEdit;
}

<div class="row">
	<div class="panel panel-primary">
		<div class="panel-heading">
			<h2 class="panel-title">基本信息</h2>
		</div>
		<div class="panel-body">

			<div>

				<div class="form-group">
					<label asp-for="Name" class="control-label">队伍名称</label>
					<input asp-for="Name" type="text" class="form-control" />
					<span asp-validation-for="Name" class="text-danger"></span>
					<p class="help-block">队伍的名称。将会显示在队伍列表页面。</p>
				</div>

				<div class="form-group">
					<label asp-for="Description" class="control-label">队伍描述</label>
					<textarea asp-for="Description" rows="3" class="form-control"></textarea>
					<span asp-validation-for="Description" class="text-danger"></span>
					<p class="help-block">队伍的描述。将会显示在队伍的详细信息页面。</p>
				</div>

				<div class="form-group">
					<label asp-for="Link" class="control-label">队伍链接</label>
					<input asp-for="Link" type="text" class="form-control" />
					<span asp-validation-for="Link" class="text-danger"></span>
					<p class="help-block">如果提供了队伍的链接，详细信息页面将会显示一个可以用来访问队伍主页的按钮。</p>
				</div>

				<hr />

				@if (isEdit)
				{
					// 所有成员
					var members = (from i in Model.MemberRegistrations
								   where i.MemberAuditState == AuditState.Accepted && i.TeamAuditState == AuditState.Accepted
								   select i.Member).ToArray();

					var coachList = new SelectList(members.Where(i => i.Type == MemberType.Coach), nameof(Member.Id), nameof(Member.Name));
					var captainList = new SelectList(members.Where(i => i.Type == MemberType.Player), nameof(Member.Id), nameof(Member.Name));
					var skipperList = new SelectList(members.Where(i => i.Type == MemberType.Skipper), nameof(Member.Id), nameof(Member.Name));

					<div class="form-group">
						<label asp-for="SkipperId" class="control-label">领队</label>
						<select asp-for="SkipperId" asp-items="skipperList" asp-option-label="没有领队" class="form-control"></select>
						<span asp-validation-for="SkipperId" class="text-danger"></span>
						<p class="help-block">选择队伍的领队。领队账户的所有者将具有对队伍的完全管理权限。如果不设定领队，则只有系统管理员能够管理该队伍。要更换领队，该成员必须首先以领队的身份加入队伍。</p>
					</div>

					<div class="form-group">
						<label asp-for="CaptainId" class="control-label">队长</label>
						<select asp-for="CaptainId" asp-items="captainList" asp-option-label="没有队长" class="form-control"></select>
						<span asp-validation-for="CaptainId" class="text-danger"></span>
						<p class="help-block">选择队伍的队长。成员必须首先作为运动员加入球队，才能出现在候选列表中。</p>
					</div>
					<div class="form-group">
						<label asp-for="CoachId" class="control-label">教练</label>
						<select asp-for="CoachId" asp-items="coachList" asp-option-label="没有教练" class="form-control"></select>
						<span asp-validation-for="CoachId" class="text-danger"></span>
						<p class="help-block">选择队伍的教练。成员必须首先作为教练加入球队，才能出现在候选列表中。</p>
					</div>
				}
				else
				{
					var userName = User.GetUserName();
					var skipperList = await (from i in DbContext.Members
											 where i.Type == MemberType.Skipper && i.CC98Id == userName
											 select i).ToArrayAsync();

					var skipperSelectList = new SelectList(skipperList, nameof(Member.Id), nameof(Member.Name));

					<div class="form-group">
						<label asp-for="SkipperId" class="control-label">领队</label>
						<select asp-for="SkipperId" asp-items="skipperSelectList" asp-option-label="没有领队" class="form-control"></select>
						<span asp-validation-for="SkipperId" class="text-danger"></span>
						<p class="help-block">选择队伍的领队。领队账户的所有者将具有对队伍的完全管理权限。成员必须首先在系统中以领队身份进行注册，才能出现在候选列表中。</p>
					</div>

					<hr />
					<p class="text-muted">在创建球队时，你不能设定队伍的队长和教练。你需要在稍后将他们邀请加入队伍，然后才能为他们设定队长或教练的身份。</p>

				}

				<hr />

				<div class="form-group">
					<label asp-for="Department" class="control-label">所属部门</label>
					<div class="input-group">
						<input asp-for="Department" type="text" class="form-control" id="department-input"/>
						<div class="input-group-btn">
							<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">常用 <span class="caret"></span></button>
							<ul class="dropdown-menu dropdown-menu-right">
								<li><a href="#" data-text="" onclick="return setDepartmentText(this);">清空</a></li>

								@if (departmentList.Length != 0)
								{
									<li role="separator" class="divider"></li>
									foreach (var i in departmentList)
									{
										<li><a href="#" data-text="@i" onclick="return setDepartmentText(this);">@i</a></li>
									}
								}
							</ul>
						</div><!-- /btn-group -->
					</div>

					<span asp-validation-for="Department" class="text-danger"></span>
					<p class="help-block">队伍关联到的部门。这将用于判断成员的外援身份，请确保队伍和所有非外援成员都按照标准名称填写部门。自由组队的队伍请将此项留空。</p>
				</div>

				<div class="form-group">
					<label asp-for="Location" class="control-label">位置</label>

					<div class="input-group">
						<input asp-for="Location" type="text" class="form-control" id="location-input" />
						<div class="input-group-btn">
							<button type="button" class="btn btn-default dropdown-toggle" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">常用 <span class="caret"></span></button>
							<ul class="dropdown-menu dropdown-menu-right">
								<li><a href="#" data-text="" onclick="return setLocationText(this);">清空</a></li>

								@if (locationList.Length != 0)
								{
									<li role="separator" class="divider"></li>
									foreach (var i in locationList)
									{
										<li><a href="#" data-text="@i" onclick="return setLocationText(this);">@i</a></li>
									}
								}
							</ul>
						</div><!-- /btn-group -->
					</div>
					<span asp-validation-for="Location" class="text-danger"></span>
					<p class="help-block">你所在的位置（如校区），这可帮助管理人员更好地安排涉及到你的活动。</p>
				</div>

				<div class="form-group">
					<label asp-for="ClotheColor1" class="control-label">主场球衣颜色</label>
					<input asp-for="ClotheColor1" type="text" class="form-control" />
					<span asp-validation-for="ClotheColor1" class="text-danger"></span>
					<p class="help-block">队伍的主场球衣颜色。</p>
				</div>

				<div class="form-group">
					<label asp-for="ClotheColor2" class="control-label">客场球衣颜色</label>
					<input asp-for="ClotheColor2" type="text" class="form-control" />
					<span asp-validation-for="ClotheColor2" class="text-danger"></span>
					<p class="help-block">队伍的客场球衣颜色。</p>
				</div>


				@if (User.CanOperate())
				{
					<hr />

					<div class="checkbox">
						<label>
							<input type="checkbox" asp-for="IsLocked" /> 锁定队伍
						</label>
						<span class="text-danger" asp-validation-for="IsLocked"></span>
						<p class="help-block">锁定队伍后，队伍所有者将不能编辑队伍信息或者删除队伍。只有具有操作权限的管理员才能取消锁定或者进行修改。</p>
					</div>

				}

			</div>

		</div>
	</div>
</div>

<script type="text/javascript">

	function setLocationText(item) {
		$('#location-input').val($(item).data('text'));
		return false;
	}


</script>