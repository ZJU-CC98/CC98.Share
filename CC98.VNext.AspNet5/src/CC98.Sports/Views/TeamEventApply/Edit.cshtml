@using System.Globalization
@model EventTeamRegistration

@{
	// 是否可以报名
	var canCommitAudit = Model.Event.State == EventState.Registring;

	// 是否覆盖审核
	var overrideText = (Model.AuditState != AuditState.NotCommitted).ToJavaScriptString();
	var operateText = User.CanOperate().ToJavaScriptString();

	// 重新排序
	Model.Members = new List<EventMemberRegistration>(Model.Members.OrderBy(i => i.Member.Type));

	var members = Model.Members.Select(i => i.Member).ToArray();
	var skipperSelectList = new SelectList(members.Where(i => i.Type == MemberType.Skipper), nameof(Member.Id), nameof(Member.Name));
	var captionSelectList = new SelectList(members.Where(i => i.Type == MemberType.Player), nameof(Member.Id), nameof(Member.Name));
	var coachSelectList = new SelectList(members.Where(i => i.Type == MemberType.Coach), nameof(Member.Id), nameof(Member.Name));

	ViewBag.Title = string.Format(CultureInfo.CurrentCulture, "编辑参赛信息 - {0} - {1}", Model.Team.Name, Model.Event.Name);
	ViewBag.TeamDepartment = Model.Team.Department;

}

<h1 class="page-header lead text-center">@ViewBag.Title</h1>
<div asp-message-list="MessageListStyle.AlertDialogClosable"></div>


<form asp-controller="TeamEventApply" asp-action="Edit" asp-antiforgery="true" method="post" id="edit-event-apply-form" data-can-operate="@operateText" data-override="@overrideText" onsubmit="return onSubmit();">

	<input type="hidden" id="commit-audit-input" name="commitAudit" value="false" />
	<input type="hidden" asp-for="EventId" />
	<input type="hidden" asp-for="TeamId" />

	<h2>主要人员信息</h2>

	<div>
		<div class="form-group">
			<label asp-for="SkipperId" class="control-label">参赛队伍领队</label>
			<select asp-for="SkipperId" asp-items="skipperSelectList" asp-option-label="暂无领队" class="form-control"></select>
			<span asp-validation-for="SkipperId" class="text-danger"></span>
			<p class="help-block">参赛队伍的领队，成员必须首先以领队身份在系统中注册并加入参赛人员名单，才能出现在该列表中。虽然可以和球队领队不同，但不建议你让其他人担任参赛队伍领队。</p>
		</div>
		<div class="form-group">
			<label asp-for="CaptainId" class="control-label">参赛队伍队长</label>
			<select asp-for="CaptainId" asp-items="captionSelectList" asp-option-label="暂无队长" class="form-control"></select>
			<span asp-validation-for="CaptainId" class="text-danger"></span>
			<p class="help-block">参赛队伍的队长，成员必须首先以运动员身份在系统中注册并加入参赛人员名单，才能出现在该列表中。参赛队伍队长可以和球队队长不同。</p>
		</div>
		<div class="form-group">
			<label asp-for="CoachId" class="control-label">参赛队伍教练</label>
			<select asp-for="CoachId" asp-items="coachSelectList" asp-option-label="暂无教练" class="form-control"></select>
			<span asp-validation-for="CoachId" class="text-danger"></span>
			<p class="help-block">参赛队伍的教练，成员必须首先以教练身份在系统中注册并加入参赛人员名单，才能出现在该列表中。参赛队伍教练可以和球队教练不同。</p>
		</div>

		<div class="form-group">
			<label asp-for="Description" class="control-label">说明</label>
			<textarea asp-for="Description" rows="5" class="form-control"></textarea>
			<span asp-validation-for="Description" class="text-danger"></span>
			<p class="help-block">你认为需要说明的其它报名相关的信息。</p>
		</div>

		@if (User.CanOperate())
		{
			<hr />
			<div class="form-group">
				<label asp-for="AuditState" class="control-label">审核状态</label>
				<select asp-enum-for="AuditState" asp-text-source="EnumOptionTextSource.Name" class="form-control"></select>
				<span asp-validation-for="AuditState" class="text-danger"></span>
				<p class="help-block">作为管理员，你可以直接修改该名单目前的审核状态。</p>
			</div>

			<div class="form-group">
				<label asp-for="AuditCommitTime" class="control-label">审核提交时间</label>

				<div class='input-group date' id='audit-commit-time-group'>
					<input type='text' asp-for="AuditCommitTime" class="form-control" />
					<span class="input-group-addon">
						<span class="glyphicon glyphicon-calendar"></span>
					</span>
				</div>
				<span asp-validation-for="AuditCommitTime" class="text-danger"></span>
				<p class="help-block">作为管理员，你可以直接修改该名单的审核提交时间。</p>
			</div>

			<div class="form-group">
				<label asp-for="EventState" class="control-label">赛事状态</label>
				<select asp-enum-for="EventState" asp-text-source="EnumOptionTextSource.Name" class="form-control"></select>
				<span asp-validation-for="EventState" class="text-danger"></span>
				<p class="help-block">
					作为管理员，你可以直接修改该名单的赛事状态，当赛事状态为<q>结束</q>时，相关用户的锁定将被自动取消。
				</p>
			</div>

		}


	</div>



	<hr />
	<h2>参赛人员名单</h2>

	@if (Model.Members.Any())
	{
		<table class="table table-hover table-striped">
			<thead>
				<tr>
					<th>姓名</th>
					<th>身份</th>
					<th>身份详情</th>
					<th>编号 <span class="glyphicon glyphicon-question-sign" style="cursor: help;" title="运动员的上场编号。所有运动员的编号必须唯一。"></span></th>
					<th>备注 <span class="glyphicon glyphicon-question-sign" style="cursor: help;" title="在此处填写赛事组委会要求或者你希望备注的其它信息。"></span></th>
					<th>操作</th>
				</tr>
			</thead>
			<tbody>
				@for (var i = 0; i < Model.Members.Count; i++)
				{
					var member = Model.Members[i].Member;

					<tr>
						<th>
							<input type="hidden" asp-for="Members[i].MemberId" />
							<input type="hidden" asp-for="Members[i].TeamId" />
							<input type="hidden" asp-for="Members[i].EventId" />

							<a asp-controller="Member" asp-action="Detail" asp-route-id="@member.Name">@member.Name</a>
						</th>
						<td>@await Html.PartialAsync("_MemberTypePartial", member.Type)</td>
						<td>@await Html.PartialAsync("_MemberRemarkPartial", member)</td>
						<td>
							@if (member.Type == MemberType.Player)
							{
								<input asp-for="Members[i].Number" type="text" style="width: 100%;" />
							}
							else
							{
								<span class="text-muted">不适用</span>
							}
						</td>
						<td><input asp-for="Members[i].Remark" type="text" style="width: 100%;" /></td>
						<td><button type="button" class="btn btn-danger btn-xs" data-id="@member.Id" onclick="deleteEventMember(this);">删除</button></td>
					</tr>
				}
			</tbody>
		</table>

		@await Html.PartialAsync("_StatisticsPartial")

	}
	else
	{
		<p class="text-muted">目前参赛名单中还没有任何成员</p>
	}

	<button type="button" class="btn btn-primary" onclick="addEventMember();">添加队内成员</button>

	<hr />

	@if (!User.CanOperate() && !canCommitAudit)
	{
		<div class="alert alert-warning">该赛事目前目前不在注册申请阶段，你只能保存申请信息，但无法提交审核。</div>
	}

	<div asp-validation-summary="ValidationSummary.ModelOnly"></div>
	<button type="button" class="btn btn-primary" onclick="beginSubmit(false);">保存名单</button>

	@if (!User.CanOperate() && canCommitAudit)
	{
		// 管理员不需要提交审核，可以直接保存并设定审核状态
		<button type="button" class="btn btn-success" onclick="beginSubmit(true);">保存名单并提交审核</button>
	}


	<button type="reset" class="btn btn-default">撤销更改</button>
</form>

@await Component.InvokeAsync("AddEventMember", Model.TeamId, Model.EventId)

<form asp-controller="TeamEventApply" asp-action="DeleteMember" method="post" asp-antiforgery="true" id="delete-event-member-form">

	<input type="hidden" name="eventId" value="@Model.EventId" />
	<input type="hidden" name="teamId" value="@Model.TeamId" />
	<input type="hidden" name="memberId" id="delete-event-member-id" />

</form>

@section scripts{

	@await Html.PartialAsync("_ValidationScriptsPartial")
	@await Html.PartialAsync("_AjaxPartial")

	<script type="text/javascript" language="javascript">

		$(document).ready(function () {

			$('#add-event-member-form').ajaxForm({

				success: function () {
					window.location.reload();
				},
				error: function (xhr) {
					$('#dialog-error-text').text(getErrorText(xhr));
				}

			});

		});


		function addEventMember() {

			var canOperate = $('#edit-event-apply-form').data('can-operate');

			// 是否是覆盖操作。
			var isOverride = $('#edit-event-apply-form').data('override');

			// 用户没有管理权限，则覆盖审核时提示用户，如果用户拒绝操作则不执行修改。
			if (!canOperate && isOverride && !confirm('该名单已经提交审核。任何修改都将会将名单的审核状态重置，你需要稍后再次提交。你确定要继续吗？')) {
				return;
			}

			$('#add-event-member-dialog').modal();
		}

		function deleteEventMember(btn) {

			var canOperate = $('#edit-event-apply-form').data('can-operate');

			// 是否是覆盖操作。
			var isOverride = $('#edit-event-apply-form').data('override');

			// 用户没有管理权限，则覆盖审核时提示用户，如果用户拒绝操作则不执行修改。
			if (!canOperate && isOverride && !confirm('该名单已经提交审核。任何修改都将会将名单的审核状态重置，你需要稍后再次提交。你确定要继续吗？')) {
				return;
			}

			$('#delete-event-member-id').val($(btn).data('id'));
			$('#delete-event-member-form').submit();
		}

		function beginSubmit(commit) {

			$('#commit-audit-input').val(commit);
			$('#edit-event-apply-form').submit();

		}

		function onSubmit() {

			var canOperate = $('#edit-event-apply-form').data('can-operate');

			// 是否是覆盖操作。
			var isOverride = $('#edit-event-apply-form').data('override');

			// 是否提交审核。
			var isCommit = $('commit-audit-input').val();

			// 操作员不显示任何提示
			if (canOperate) {
				return true;
			}

			if (isOverride) {

				if (isCommit) {
					return confirm('你之前已经申请了审核。如果你重新提交审核，将会刷新你的提交审核时间，这可能影响到你和其他人的提交时间顺序。如果你认为审核结果有误，请直接联系管理员，而不要重新提交审核。你确定要重新提交审核吗？');
				} else {
					return confirm('你之前已经申请了审核。如果你重新保存你的资料，你需要稍后再次提交审核，这将会刷新你的提交审核时间，可能影响到你和其他人的提交时间顺序。如果你认为审核结果有误，请直接联系管理员，而不要重新提交审核。你确定要重新提交审核吗？');
				}
			} else {

				if (isCommit) {
					return confirm('提交审核后，你将不能随意修改资料。重新修改资料将需要再次提交，这回刷新你的提交审核时间，可能影响到你和其他人的提交时间顺序。你确定要提交审核吗？');
				} else {
					return true;
				}
			}
		}


	</script>
}
